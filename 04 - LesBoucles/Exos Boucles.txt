Dans chaque exo, il faut utiliser des boucles !

Pour cette serie d'exercices, faire un seul projet et appeler les differentes fonctions dans Main.

Pour chaque exercice, vous devez demander à l'utilisateur de rentrer une valeur et ensuite passer la valeur saisie dans la fonction.
Utiliser le HelperRead (créé en cours) qui permet de demander à l'utilisateur un int de manière sécurisé.
=> Copiez le fichier HelperRead.cs dans votre projet.

Exemple Exo 1 dans Main :
int valueUser = HelperRead.ReadInt();
DisplayAllNumber(valueUser);

Exo 0
Ajouter trois fonctions dans HelperRead :
- ReadIntMinMax : La fonction demande à l'utilisateur un int entre une valeur min et max.
Si la valeur entrée par l'utilisateur n'est pas entre ces deux valeurs, 
on redemande à l'utilisateur de rentrer une valeur.
Ne pas oublier de valider la valeur saisie par l'utilisateur comme dans ReadInt.

- ReadFloat : même chose qu'avec ReadInt mais avec des floats.
- ReadFloatMinMax : même chose qu'avec ReadIntMinMax mais avec des floats.

Exo 1
Creer une fonction 'DisplayAllNumber' qui prend en paramètre un int.
La fonction doit afficher tous les nombres de 0 à la valeur du paramètre sans aller à la ligne.
Ex : 4 est passé en paramètre. Le programme affiche : 
01234

Exo 2
Creer une fonction 'DisplayAllCharacter' qui prend en paramètre un int.
La fonction doit afficher les caractères de valeur 33 à la valeur numerique + 33 du paramètre.
(33 étant le premier caractère affichable dans la table ASCII, '!')
Ex : 3 est passé en paramètre. le programme affiche :
!
"
#

Exo 3
Creer une fonction 'DisplayAllPairNumber' qui prend en paramètre un int.
La fonction doit afficher tous les nombres de 0 à la valeur du paramètre et si les nombres sont multiple de 2 et sans aller à la ligne.
Ex : 11 est passé en paramètre. Le programme affiche : 
0246810

Exo 4
Creer une fonction 'DisplayTriangle' qui prend en paramètre un int et qui affiche un figure comme suit :
Exemple le programme prend en paramètre 4 et affiche :

*
**
***
****

Exo 5
Creer une fonction 'DisplayDiamond' qui prend en paramètre un int et affiche une figure comme suit :
Exemple le programme prend en paramètre 5 et affiche :
    *     
   ***
  *****
 *******
*********
 *******
  *****
   ***
    *
	
Exemple le programme prend en paramètre 4 et affiche :
   *     
  ***
 *****
*******
 *****
  ***
   *
	